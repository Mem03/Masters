data(us_rgdp)
require(midasml)
data(us_rgdp)
View(us_rgdp)
install.packages("midasml")
install.packages("gdeltr2")
devtools::install_github("abresler/gdeltr2")
# -------------- download inflation news series from GDELT --------------------#
# r-package to download GDELT data:
devtools::install_github("abresler/gdeltr2")
library(gdeltr2)
# -------------- download inflation news series from GDELT --------------------#
# r-package to download GDELT data:
#devtools::install_github("abresler/gdeltr2")
library(gdeltr2)
gdeltr2
f1 <- function(k){exp(-k^2/8)}
f2 <- function(k){exp(-k/8)}
f1(1:9)
f1(seq(0,5,by=0.0001))
plot(f1(seq(0,5,by=0.0001)))
plot(f2(seq(0,5,by=0.0001)))
f1(seq(0,5,by=0.0001))-f2(seq(0,5,by=0.0001))
plot(f1(seq(0,5,by=0.0001))-f2(seq(0,5,by=0.0001)))
plot(f1(seq(1,10,by=10))-f2(seq(1,10,by=10)))
f1(seq(1,10,by=10))-f2(seq(1,10,by=10))
f1(seq(1,10,by=10))
f1(seq(1,10,by=1))
f1(seq(1,10,by=1))-f2(seq(1,10,by=1))
plot(f1(seq(1,10,by=1))-f2(seq(1,10,by=1)))
plot(f1(seq(1,100,by=1))-f2(seq(1,100,by=1)))
install.packages("midasml")
library(midasml)
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5,   standardize = FALSE, intercept = FALSE)
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5,   standardize = FALSE, intercept = FALSE)
solution
solution$cv.fit$lam.min$beta
solution$cv.fit$lam.min$b0
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE)
solution$cv.fit$lam.min$beta
?tscv.sglfit
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 541)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 541)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 541)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 541)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123)
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123)
solution$cv.fit$lam.min$b0
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123, K = 100)
solution$cv.fit$lam.min$b0
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123, K = 99)
solution$cv.fit$lam.min$b0
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 123, K = 99)
solution$cv.fit$lam.min$b0
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = 0.5, standardize = FALSE, intercept = TRUE, seed = 1234, K = 99)
solution$cv.fit$lam.min$b0
solution$cv.fit$lam.min$beta
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
gamma = 0.5
standardize = FALSE
intercept = TRUE
seed = 1234
K = 99
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = gamma, standardize = standardize, intercept = intercept, seed = seed, K = K)
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
gamma = 0.5
standardize = FALSE
intercept = TRUE
seed = 1234
K = 99
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = gamma, standardize = standardize, intercept = intercept, seed = seed, K = K)
save(x, y, gindex, gamma, standardize, interecept, seed, K, file = 'input.RData')
save(solution, file = 'output.RData')
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
gamma = 0.5
standardize = FALSE
intercept = TRUE
seed = 1234
K = 99
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = gamma, standardize = standardize, intercept = intercept, seed = seed, K = K)
save(x, y, gindex, gamma, standardize, intercept, seed, K, file = 'input.RData')
save(solution, file = 'output.RData')
setwd("~/Documents/GitHub/midasmlpy/R_test")
#setwd("~/Documents/GitHub/midasmlpy/R_test")
#install.packages("midasml")
library(midasml)
set.seed(123)
x = matrix(rnorm(100 * 20), 100, 20)
beta = c(5,4,3,2,1,rep(0, times = 15))
y = x%*%beta + rnorm(100)
gindex = sort(rep(1:4,times=5))
gamma = 0.5
standardize = FALSE
intercept = TRUE
seed = 1234
K = 99
solution <- tscv.sglfit(x = x, y = y, gindex = gindex, gamma = gamma, standardize = standardize, intercept = intercept, seed = seed, K = K)
save(x, y, gindex, gamma, standardize, intercept, seed, K, file = 'input.RData')
save(solution, file = 'output.RData')
